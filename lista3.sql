--O CLIENTE "Thiago Andrade Fiuza", ANTES MORADOR DA CIDADE DE ITAMBACURI, MUDOU DE ENDEREÇO 
--E SOLICITOU A ALTERÇÃO DE SEUS DADOS NO BANCO. O NOVO ENDEREÇO PASSA A SER NA CIDADE DE 
--UBERLANDIA, À AVENIDA AFONSO PENA. ATUALIZE OS DADOS DO CLIENTE:

--ANTES
SELECT * FROM CLIENTE WHERE CIDADE_CLIENTE = 'Itambacuri';

UPDATE CLIENTE SET CIDADE_CLIENTE = 'Uberlandia', 
		   RUA_CLIENTE='Avenida Afonso Pena'
WHERE 	NOME_CLIENTE = 'Thiago Andrade Fiuza' 
AND 	CIDADE_CLIENTE = 'Itambacuri';

--DEPOIS
SELECT * FROM CLIENTE WHERE CIDADE_CLIENTE = 'Uberlandia';

--AO FINAL DO MÊS É NECESSÁRIO ATUALIZAR O SALDO DAS CONTAS DOS CLIENTES APLICANDO
--A CORREÇÃO DA INFLAÇÃO DE 1% SOBRE AS MESMAS. IMPLEMENTE ESTA ATUALIZAÇÃO VIA SQL.

--ANTES E DEPOIS
SELECT NOME_CLIENTE, SUM(saldo_deposito) FROM DEPOSITO 
GROUP BY NOME_CLIENTE ORDER BY SUM(saldo_deposito);

UPDATE DEPOSITO SET SALDO_DEPOSITO = saldo_deposito * 1.01;

--AO FINAL DO M ÊS É NECESSÁRIO ATUALIZAR O SALDO DAS CONTAS DOS CLIENTES APLICANDO
--OS JUROS DOS INVESTIMENTOS SOBRE AS MESMAS. 
--CLIENTES COM SALDO ATÉ DEZ MIL RECEBEM 3% DE ACRÉSCIMO.
--CLIENTES COM SALDO MAIOR QUE DEZ MIL RECEBEM 5% DE ACRÉSCIMO.

--ANTES E DEPOIS
SELECT nome_cliente , SUM(saldo_deposito) FROM DEPOSITO 
GROUP BY nome_cliente ORDER BY SUM(saldo_deposito);

UPDATE deposito SET SALDO_DEPOSITO = saldo_deposito * 1.05
WHERE saldo_deposito <= 10000;

UPDATE deposito SET SALDO_DEPOSITO = saldo_deposito  * 1.03
where saldo_deposito > 10000;

--A ORDEM DE EXECUÇÃO DAS CONSULTAS É IMPORTANTE PORQUE SENÃO UM 
--CLIENTE COM SALDO LIGEIRAMENTE INFERIOR A DEZ MIL PODE RECEBER 
--UM ACRÉSCIMO DE 8.15% = (1.03*1.05)


--INSERIR NOVOS DEPOSITOS NO BANCO DE DADOS

 select * from deposito;


INSERT INTO DEPOSITO
VALUES (10000, 20000,  'PUC', 'Carlos Eduardo', 1200);
-- tem que preencher as chaves estrangeiras
-- criar cliente carlos
-- criar conta para o carlos - attr saldo_conta é um atributo derivado, nao devia existir na tabela
-- depois criar o deposito acima

select * from conta order by nome_cliente;

--INCLUIR PARA TODOS OS CLIENTES COM EMPRESTIMOS NA AGENCIA PUC
--UMA CONTA DE DEPÓSITO NO VALOR DE R$ 200,00.

select * from deposito d;

INSERT INTO DEPOSITO
SELECT NUMERO_EMPRESTIMO, NUMERO_CONTA, NOME_AGENCIA, NOME_CLIENTE, 200
FROM EMPRESTIMO WHERE NOME_AGENCIA = 'PUC';

-- 200 ali é um valor fixo, pode ser inserido normalmente

--VERIFICANDO:
SELECT * FROM DEPOSITO WHERE NOME_AGENCIA = 'PUC' 
AND SALDO_DEPOSITO = 200


--O MAIS CORRETO AQUI É A CRIAÇÃO DE UM NÚMERO SEQUENCIAL PARA 
--IDENTIFICAR O NÚMERO DO DEPÓSITO. SUPONDO QUE JÁ TEMOS 
--ALGUNS NÚMEROS TEMOS QUE COMEÇAR A NOSSA SEQUENCIA DE MAX+1

SELECT max(NUMERO_DEPOSITO) FROM DEPOSITO


create sequence seq_deposito INCREMENT 1 START 8795330;
     

--AGORA NÃO PRECISAMOS INSERIR O NÚMERO DO DEPÓSITO MANUALMENTE


INSERT INTO DEPOSITO
SELECT nextval('seq_deposito'), NUMERO_CONTA, NOME_AGENCIA, NOME_CLIENTE, 200
FROM EMPRESTIMO WHERE NOME_AGENCIA = 'PUC';



--07- UM MILIONÁRIO DECIDIU DOAR PARTE DE SUA FORTUNA PARA CLIENTES 
--DO BANCO COM DÍVIDAS ALTAS. O CRITÉRIO SERÁ DEPOSITAR 2 MIL REAIS
--PARA TODOS OS CLIENTES DO BANCO QUE FIZERAM EMPRESTIMOS CUJAS
--SOMAS ULTRAPASSEM A SOMA DE DEPÓSITOS. CRIE UM SQL PARA INSERIR
-- NA TABELA DE DEPÓSITOS QUANTIAS DE 2 MIL REAIS PARA TODAS AS CONTAS
-- QUE ESTÃO COM SALDO NEGATIVO EM MAIS DE DOIS MIL REAIS.
 

--apenas demonstrativo
INSERT INTO DEPOSITO
SELECT nextval('seq_deposito'), NUMERO_CONTA, NOME_AGENCIA, NOME_CLIENTE, 2000
FROM ...


--VALORES NEGATIVOS - soma de todos os emprestimo * -1

 SELECT NUMERO_CONTA, NOME_AGENCIA, NOME_CLIENTE, SUM(VALOR_EMPRESTIMO)*(-1) AS SOMA 
 FROM EMPRESTIMO 
 GROUP BY NUMERO_CONTA, NOME_AGENCIA, NOME_CLIENTE


--VALORES POSITIVOS - soma dos depositos

 SELECT NUMERO_CONTA, NOME_AGENCIA, NOME_CLIENTE, SUM(SALDO_DEPOSITO) AS  SOMA 
 FROM DEPOSITO  
 group BY NUMERO_CONTA, NOME_AGENCIA, NOME_CLIENTE



--JUNÇÃO DOS DADOS NEGATIVOS E POSITIVOS
-- union junta os relatorios e faz o saldo geral
	SELECT NUMERO_CONTA , NOME_AGENCIA , NOME_CLIENTE  FROM (
		SELECT NUMERO_CONTA, NOME_AGENCIA, NOME_CLIENTE, SUM(VALOR_EMPRESTIMO)*(-1) AS SOMA 
		FROM EMPRESTIMO 
		GROUP BY NUMERO_CONTA, NOME_AGENCIA, NOME_CLIENTE
		union
 	   	SELECT NUMERO_CONTA, NOME_AGENCIA, NOME_CLIENTE, SUM(SALDO_DEPOSITO) AS  SOMA 
        FROM DEPOSITO  
        group BY NUMERO_CONTA, NOME_AGENCIA, NOME_CLIENTE
   ) AS RELATORIO1;


   
--JUNÇÃO DOS DADOS NEGATIVOS E POSITIVOS E FILTRAGEM DOS REGISTROS


SELECT NUMERO_CONTA , NOME_AGENCIA , NOME_CLIENTE  FROM (
    SELECT NUMERO_CONTA, NOME_AGENCIA, NOME_CLIENTE, SUM(VALOR_EMPRESTIMO)*(-1) AS SOMA 
    FROM EMPRESTIMO 
    GROUP BY NUMERO_CONTA, NOME_AGENCIA, NOME_CLIENTE
    union
    SELECT NUMERO_CONTA, NOME_AGENCIA, NOME_CLIENTE, SUM(SALDO_DEPOSITO) AS  SOMA 
    FROM DEPOSITO  
    group BY NUMERO_CONTA, NOME_AGENCIA, NOME_CLIENTE
    ) AS RELATORIO1
GROUP BY NUMERO_CONTA, NOME_AGENCIA, NOME_CLIENTE
HAVING sum(RELATORIO1.soma) < -2000

--ENTÃO:
INSERT INTO DEPOSITO
SELECT nextval('seq_deposito'), NUMERO_CONTA, NOME_AGENCIA, NOME_CLIENTE, 2000 
FROM (
    SELECT NUMERO_CONTA , NOME_AGENCIA , NOME_CLIENTE  FROM (
        SELECT NUMERO_CONTA, NOME_AGENCIA, NOME_CLIENTE, SUM(VALOR_EMPRESTIMO)*(-1) AS SOMA 
        FROM EMPRESTIMO 
        GROUP BY NUMERO_CONTA, NOME_AGENCIA, NOME_CLIENTE
        union
        SELECT NUMERO_CONTA, NOME_AGENCIA, NOME_CLIENTE, SUM(SALDO_DEPOSITO) AS  SOMA 
        FROM DEPOSITO  
        group BY NUMERO_CONTA, NOME_AGENCIA, NOME_CLIENTE
    ) AS RELATORIO1
    GROUP BY NUMERO_CONTA, NOME_AGENCIA, NOME_CLIENTE
    having sum(soma) < -2000
) as RELATORIO2
